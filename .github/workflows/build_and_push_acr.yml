name: Build and Deploy Container to ACR + App Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # required for OIDC
      contents: read

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Azure OIDC Login
      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 3. Ensure subscription context
      - name: Ensure subscription context
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          echo "Subscription in use:"
          az account show --query "{id:id, name:name}" -o table

      # 4. Debug: list available ACRs
      - name: List available ACRs
        run: az acr list --query "[].{name:name,loginServer:loginServer,resourceGroup:resourceGroup}" -o table

      # 5. Set variables
      - name: Set variables
        id: vars
        run: |
          ACR_NAME="ragfoundationsdemoregistry"   # hardcoded for debugging
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "AZURE_RG=${{ secrets.AZURE_RG }}" >> $GITHUB_ENV
          LOGIN_SERVER=$(az acr show --name $ACR_NAME --query loginServer -o tsv)
          echo "LOGIN_SERVER=$LOGIN_SERVER" >> $GITHUB_ENV
          IMAGE_NAME=$LOGIN_SERVER/${{ github.repository }}:latest
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "Using image: $IMAGE_NAME"

      # 6. Build and Push Docker Image
      - name: Build and Push Image
        run: |
          docker build -t $IMAGE_NAME -f Dockerfile.backend .
          az acr login --name $ACR_NAME
          docker push $IMAGE_NAME

      # 7. Configure Web App to Use Container
      - name: Deploy to Web App
        run: |
          az webapp config container set \
            --name tchamna-rag-ai-foundations-demo \
            --resource-group $AZURE_RG \
            --container-image-name $IMAGE_NAME \
            --container-registry-url https://$LOGIN_SERVER

          az webapp config appsettings set \
            --resource-group $AZURE_RG \
            --name tchamna-rag-ai-foundations-demo \
            --settings WEBSITES_PORT=8000

      # 8. Restart Web App
      - name: Restart Web App
        run: |
          az webapp restart \
            --name tchamna-rag-ai-foundations-demo \
            --resource-group $AZURE_RG
