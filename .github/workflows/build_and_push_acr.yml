name: Build and deploy Container to ACR + Web App Slot

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set variables
        run: |
          echo "ACR_NAME=ragfoundationsdemoregistry" >> $GITHUB_ENV
          echo "AZURE_RG=rag-ai-foundations-demo-rg" >> $GITHUB_ENV
          LOGIN_SERVER=$(az acr show --name ragfoundationsdemoregistry --query loginServer -o tsv)
          echo "LOGIN_SERVER=$LOGIN_SERVER" >> $GITHUB_ENV
          IMAGE_NAME=$LOGIN_SERVER/rag_ai_backend:latest
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Build and Push Image
        run: |
          docker build -t $IMAGE_NAME -f Dockerfile.backend .
          az acr login --name $ACR_NAME
          docker push $IMAGE_NAME

      - name: Deploy container to slot
        run: |
          az webapp config container set \
            --name tchamna-rag-ai-foundations-demo \
            --resource-group $AZURE_RG \
            --slot container-slot \
            --docker-custom-image-name $IMAGE_NAME \
            --docker-registry-server-url https://$LOGIN_SERVER

          az webapp config appsettings set \
            --resource-group $AZURE_RG \
            --name tchamna-rag-ai-foundations-demo \
            --slot container-slot \
            --settings WEBSITES_PORT=8000

      - name: Restart container slot
        run: |
          az webapp restart \
            --name tchamna-rag-ai-foundations-demo \
            --resource-group $AZURE_RG \
            --slot container-slot
