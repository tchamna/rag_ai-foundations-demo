name: Build and Deploy to Azure (Code only)

on:
  workflow_dispatch:   # Run only when manually triggered

jobs:
  # -----------------------------
  # 1. Build Python App Artifact
  # -----------------------------
  build_app:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m venv antenv
          source antenv/bin/activate
          pip install -r requirements.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !antenv/

  # -----------------------------
  # 2. Deploy App from Artifact
  # -----------------------------
  deploy_app:
    runs-on: ubuntu-latest
    needs: build_app
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'tchamna-rag-ai-foundations-demo'
          slot-name: 'Production'

  # -----------------------------
  # 3. Build & Push Container to ACR (Disabled)
  # -----------------------------
  # build_and_push_runtime_acr:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Azure Login (OIDC)
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
  #
  #     - name: Set variables
  #       run: |
  #         echo "ACR_NAME=ragfoundationsdemoregistry" >> $GITHUB_ENV
  #         LOGIN_SERVER=$(az acr show --name ragfoundationsdemoregistry --query loginServer -o tsv)
  #         echo "LOGIN_SERVER=$LOGIN_SERVER" >> $GITHUB_ENV
  #         IMAGE_NAME=$LOGIN_SERVER/rag_ai_backend:runtime-minimal
  #         echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
  #
  #     - name: Build and Push Image
  #       run: |
  #         docker build -t $IMAGE_NAME -f Dockerfile .
  #         az acr login --name $ACR_NAME
  #         docker push $IMAGE_NAME
